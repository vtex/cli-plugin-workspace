{
  "name": "@vtex/cli-plugin-workspace",
  "description": "vtex plugin workspace",
  "version": "1.0.9-beta",
  "bugs": "https://github.com/vtex/cli-plugin-workspace/issues",
  "dependencies": {
    "@oclif/command": "^1",
    "@oclif/color": "^0.x",
    "ramda": "^0.27.1",
    "tslib": "^1"
  },
  "devDependencies": {
    "@oclif/config": "^1.12.11",
    "@oclif/dev-cli": "^1.21.3",
    "@oclif/plugin-help": "^3.1.0",
    "@oclif/test": "^1.2.4",
    "@types/chai": "^4.1.7",
    "@types/fs-extra": "^9.0",
    "@types/mocha": "^8.0.0",
    "@types/node": "^14.14.16",
    "@types/semver": "^7.3.1",
    "@types/supports-color": "^7.2.0",
    "chai": "^4.2.0",
    "eslint": "^7.3.1",
    "eslint-config-oclif": "^3.1.0",
    "eslint-config-oclif-typescript": "^0.2.0",
    "fancy-test": "^1.4.1",
    "globby": "^11.0.1",
    "mocha": "^8.2.1",
    "nock": "^13.0.3",
    "ts-node": "^9.0.0",
    "typescript": "3.8.3",
    "vtex": "^2.121.0-beta.1",
    "lint-staged": "^10.2.11"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "files": [
    "/build",
    "/npm-shrinkwrap.json",
    "/oclif.manifest.json",
    "/yarn.lock"
  ],
  "homepage": "https://github.com/vtex/cli-plugin-workspace",
  "keywords": [
    "oclif-plugin"
  ],
  "license": "MIT",
  "oclif": {
    "commands": "./build/commands",
    "bin": "oclif-example",
    "devPlugins": [
      "@oclif/plugin-help"
    ],
    "topics": {
      "workspace": {
        "description": "Manages workspaces. Run 'vtex workspace' to see all 9 subcommands."
      }
    }
  },
  "repository": "vtex/cli-plugin-workspace",
  "scripts": {
    "watch": "yarn build-clean && yarn tsc --watch",
    "build": "yarn build-clean && tsc",
    "build-clean": "rm -rf lib",
    "clean": "rm -f oclif.manifest.json",
    "lint": "eslint ./src --cache --ext .ts --config .eslintrc",
    "pretest": "yarn build --noEmit && tsc -p test --noEmit",
    "test": "mocha --forbid-only \"test/**/*.test.ts\"",
    "posttest": "yarn lint",
    "prepublishOnly": "yarn run build && oclif-dev manifest && oclif-dev readme && cat oclif.manifest.json",
    "postpublish": "cat oclif.manifest.json && yarn run clean",
    "preversion": "yarn run clean",
    "prepack": "rm -rf lib && tsc -b && oclif-dev manifest && oclif-dev readme",
    "version": "oclif-dev readme && git add README.md"
  },
  "lint-staged": {
    "*.{ts,js,tsx,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.json": [
      "prettier --write"
    ]
  }
}
